// <auto-generated />
using System;
using ApiPessoal.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIPessoal.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241113224605_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APIPessoal.Models.Contrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cliente")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Prestador")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Status")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Titulo")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("TB_CONTRATOS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cliente = "ETEC",
                            DataFim = new DateTime(2024, 10, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataInicio = new DateTime(2023, 10, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Prestador = "EscritórioX",
                            Status = "Ativo",
                            Titulo = "Primeiro Contrato",
                            Valor = 1300m
                        },
                        new
                        {
                            Id = 2,
                            Cliente = "Casa de Bolo",
                            DataFim = new DateTime(2024, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataInicio = new DateTime(2023, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Prestador = "EscritórioY",
                            Status = "Desativado",
                            Titulo = "Segundo Contrato",
                            Valor = 2500m
                        },
                        new
                        {
                            Id = 3,
                            Cliente = "Mercadinho",
                            DataFim = new DateTime(2024, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataInicio = new DateTime(2023, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Prestador = "EscritórioZ",
                            Status = "Ativo",
                            Titulo = "Terceiro Contrato",
                            Valor = 800m
                        });
                });

            modelBuilder.Entity("APIPessoal.Models.Documento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Assinado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Status")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Tipo")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Titulo")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("TB_DOCUMENTOS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Assinado = true,
                            DataCriacao = new DateTime(2023, 10, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Observacoes = "Contrato de prestação de serviços firmado entre as partes.",
                            Status = "Ativo",
                            Tipo = "Contrato",
                            Titulo = "Contrato de Prestação de Serviços"
                        },
                        new
                        {
                            Id = 2,
                            Assinado = false,
                            DataCriacao = new DateTime(2023, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Observacoes = "Procuração para representação legal do cliente.",
                            Status = "Ativo",
                            Tipo = "Procuração",
                            Titulo = "Procuração"
                        },
                        new
                        {
                            Id = 3,
                            Assinado = false,
                            DataCriacao = new DateTime(2023, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Observacoes = "Certidão de casamento registrada em cartório.",
                            Status = "Ativo",
                            Tipo = "Certidão",
                            Titulo = "Certidão de Casamento"
                        });
                });

            modelBuilder.Entity("APIPessoal.Models.Parte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DocumentoIdentidade")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Endereco")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Nome")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Telefone")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Tipo")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("TB_PARTES", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DocumentoIdentidade = "RG",
                            Email = "vitor@email.com",
                            Endereco = "Rua 1, Bairro A, Cidade X",
                            Nome = "Vitor",
                            Telefone = "1234-5678",
                            Tipo = "Cliente"
                        },
                        new
                        {
                            Id = 2,
                            DocumentoIdentidade = "OAB",
                            Email = "ana@adv.com",
                            Endereco = "Rua 2, Bairro B, Cidade Y",
                            Nome = "Ana",
                            Telefone = "2345-6789",
                            Tipo = "Advogado"
                        },
                        new
                        {
                            Id = 3,
                            DocumentoIdentidade = "CPF",
                            Email = "carlos@teste.com",
                            Endereco = "Rua 3, Bairro C, Cidade Z",
                            Nome = "Carlos",
                            Telefone = "3456-7890",
                            Tipo = "Testemunha"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
